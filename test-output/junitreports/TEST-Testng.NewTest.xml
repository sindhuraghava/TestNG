<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Raghava" failures="0" tests="1" name="Testng.NewTest" time="0.018" errors="1" timestamp="30 Oct 2023 03:31:49 GMT" skipped="0">
  <testcase classname="Testng.NewTest" name="test1" time="0.018">
    <error message="
Data provider mismatch
Method: test1([])
Arguments: [(java.lang.Integer)1,(java.lang.String)a]" type="org.testng.internal.reflect.MethodMatcherException">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: test1([])
Arguments: [(java.lang.Integer)1,(java.lang.String)a]
	at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:49)
	at org.testng.internal.Invoker.injectParameters(Invoker.java:1293)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1187)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- test1 -->
</testsuite> <!-- Testng.NewTest -->
